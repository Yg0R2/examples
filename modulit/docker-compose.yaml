version: '3.8'

x-keystore-volume: &keystore-volume
  type: bind
  read_only: true
  source: ./nginx/cert
  volume:
    nocopy: true

services:
  auth:
    container_name: auth
    depends_on:
      - redis
      - user
    environment:
      - CLIENT_USER_BASEURL=http://user:8080
      - SERVER_PORT=8080
      - SERVER_SSL_ENABLED=false
      - SPRING_REDIS_HOST=redis
    image: auth:0.0.1-SNAPSHOT
#    ports:
#      - 8010:8010
    volumes:
      - <<: *keystore-volume
        target: /workspace/BOOT-INF/classes/keystore/

  backend:
    container_name: backend
    depends_on:
      - redis
    environment:
      - SERVER_PORT=8080
      - SERVER_SSL_ENABLED=false
      - SPRING_REDIS_HOST=redis
    image: backend:0.0.1-SNAPSHOT
#    ports:
#      - 8030:8030
    volumes:
      - <<: *keystore-volume
        target: /workspace/BOOT-INF/classes/keystore/

  layout:
    container_name: layout
    depends_on:
      - redis
    environment:
      - SERVER_PORT=8080
      - SERVER_SSL_ENABLED=false
      - SPRING_REDIS_HOST=redis
    image: layout:0.0.1-SNAPSHOT
#    ports:
#      - 8000:8000
    volumes:
      - <<: *keystore-volume
        target: /workspace/BOOT-INF/classes/keystore/

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - type: bind
        read_only: true
        source: ./nginx/conf.d/
        target: /etc/nginx/conf.d/
        volume:
          nocopy: true
      - <<: *keystore-volume
        target: /etc/nginx/ssl

  redis:
    container_name: redis
    image: redis:alpine
#    ports:
#      - 6379:6379

  user:
    container_name: user
    depends_on:
      - redis
    environment:
      - SERVER_PORT=8080
      - SERVER_SSL_ENABLED=false
      - SPRING_REDIS_HOST=redis
    image: user:0.0.1-SNAPSHOT
#    ports:
#      - 8020:8020
    volumes:
      - <<: *keystore-volume
        target: /workspace/BOOT-INF/classes/keystore/
